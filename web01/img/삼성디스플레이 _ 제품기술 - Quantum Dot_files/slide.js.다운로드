$(function() {
	$.fn.cssInt = function(name) {
		return parseInt(this.css(name));
	}
	$.fn.cssFloat = function(name) {
		return parseFloat(window.getComputedStyle(this[0])[name]);
	}
	$.fn.jtoa = function() {
		return this.map(function() { return $(this); }).toArray();
	}
});

// 스와이프
$(function() {
	$('.horizontal_slide .slide_cont ul').swipe({
		swipeStatus: function(e, p, dr, ds, du, f, fd, cd) {
			var cont = $(this).parents('.slide_cont');
			if (p === 'start') {
				cont.addClass('swiping');
				cont.data('rail', cont.find('.mCSB_dragger').cssInt('left'));
				cont.find('ul').css({'cursor': 'grabbing'});
			} else if (cont.is('.swiping')) {
				if (!!p.match('end|cancel')) {
					cont.removeClass('swiping');
					cont.find('ul').css({'cursor': 'grab'});

					var idx = checkSlideGetIdx(cont);
					if (cont.find('ul li:not(.auto-generated)').length < idx) {
						cont.data('over', 'first');
						cont.find('.mCSB_dragger').css({'left': 0});
						cont.find('.mCSB_container').css({'left': 0});
					}
				} else {
					var moveWeight = 1, moveDs = ds * moveWeight, area = cont.find('.mCSB_draggerRail').cssInt('width') - cont.find('.mCSB_dragger').cssInt('width');
					var move = (!!dr.match('left|up') ? (cont.data('rail') + moveDs) : (cont.data('rail') - moveDs));
					move = Math.max(0, move);
					move = Math.min(area, move);
					move = move / area; //cont.find('.mCSB_draggerRail').cssInt('width');
					cont.find('.mCSB_dragger').css({'left': area * move});
					
					var moveArea = cont.find('.mCSB_container').cssInt('width') - cont.cssFloat('width');
					cont.find('.mCSB_container').css({'left': -moveArea * move});
					checkSlidePosition(cont);
					
					if (!!dr.match('left|right')) {
						cont.data('scroll', 'disable');
					} else {
						cont.data('scroll', 'enable');
					}
				}
			}
		},
		triggerOnTouchLeave: true,
		allowPageScroll: 'vertical'
	});
	$('.horizontal_slide .slide_cont ul').on('touchmove', function() {
		if ($(this).parents('.slide_cont').data('scroll') === 'disable') {
			return false;
		}
	});
	$('.horizontal_slide .slide_cont').on('mouseenter', 'ul', function() {
		var cont = $(this).parents('.slide_cont');
		if (!cont.is('.swiping')) {
			$(this).css({'cursor': 'grab'});
		}
	});
});

$(window).on('load', slideLoad).on('resize', slideResize);

var page = null, prevPage = null;

// 스크롤바 로드
function slideLoad() {
	page = prevPage = (viewportWidth() > 768 ? 'pc' : 'm');
	
	setSlideX($('.horizontal_slide .slide_cont').jtoa()); // 스크롤바 세팅

	if ($('body').is('.device')) {
		$('.horizontal_slide .slide_cont ul').each(function() {
			$(this).swipe('destroy');
		});
	}
}
function slideResize() {
	page = (viewportWidth() > 768 ? 'pc' : 'm');

	if (page !== prevPage) {

	}
	setSlideX($('.horizontal_slide .slide_cont').jtoa()); // 스크롤바 세팅

	prevPage = page;
}

function checkSlideGetIdx(e) {
	var l = e.find('.mCSB_container').cssFloat('left'), b = e.find('li').eq(0).cssFloat('width'), m = e.find('li').eq(1).cssFloat('margin-left');
	var idx = 1, t = b;
	while (Math.abs(l) >= t) {
		idx++;
		t += b + m;
	}
	return idx;
}
function checkSlidePosition(e) { // 스크롤바 위치에 따라 IDX 표시 (01, 02, 03, ...)
	var idx = checkSlideGetIdx(e);
	if (e.find('ul li:not(.auto-generated)').length < idx) {
		idx = 1;
	}
	e.parent().find('.current').text((idx < 10 ? '0' + idx : idx));
}
function setSlideX(e) { // 스크롤바 세팅
	if (e.constructor === Array) {
		e.forEach(function(e) {
			__setSlideX(e);
		});
	} else {
		__setSlideX(e);
	}
}
var i = 0;
function __setSlideX(e) {
	if (e) {
		e.mCustomScrollbar('destroy');
	}
	e.data('over', 'first');
	e.mCustomScrollbar({
		axis:"x",
		theme : "dark-2",
		setLeft: "0px",
		mouseWheelPixels : 300,
		scrollInertia : 200,
		callbacks: {
			whileScrolling: function() {
				checkSlidePosition(e);
			}
		},
		advanced:{
			autoExpandHorizontalScroll: true
		}
	});
	if ($('body').is('.device')) {
		e.removeClass('mCustomScrollbar'); // 터치로 스크롤 불가능한 문제 해결 - https://github.com/malihu/malihu-custom-scrollbar-plugin/issues/573
	}

	var width = 0, winWidth = $(window).innerWidth();
	if (page === 'pc') {
		width = winWidth <= 1590 ? (winWidth / 2) - (winWidth * 0.0472) - 2 + 'px' : 718;
	} else {
		width = winWidth <= 320 ? 253 : winWidth * 0.7917 + 'px';
	}
	e.find('li').css({'width': width});

	e.find('ul').css({'width': getSlideWidth(e)});

	checkSlidePosition(e);

	e.attr('data-item', e.find('li').length);
}
function getSlideWidth(e) { // 스크롤 포지션을 위한 함수
	var list = e.find('ul li:not(.auto-generated)'), total = 0, frameWeight = (page === 'pc' ? 2 : 1), marginLeft = (page === 'pc' ? list.eq(1).cssFloat('margin-left') : 0);
	var box = e.cssFloat('width'), base = Math.min(box, (list.eq(0).cssFloat('width') * frameWeight)) + marginLeft;
	total = list.eq(0).cssFloat('width') * (list.length + (frameWeight - 1)) + list.eq(1).cssFloat('margin-left') * (list.length - (page === 'pc' ? 0 : 1)) + (box - base);

	return total;
}
